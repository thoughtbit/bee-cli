#!/usr/bin/env node

var spawn = require('cross-spawn')
var chalk = require('chalk')
var os = require('os')

var script = process.argv[2]
var args = process.argv.slice(3)

var nodeVersion = process.versions.node
var versions = nodeVersion.split('.')
var major = versions[0]
var minor = versions[1]
var platform = os.platform()

if (((major * 10) + (minor * 1)) < 65) {
  console.log(chalk.red(`Node version (${major}.${minor}) is not compatibile, ${chalk.cyan('must >= 6.5')}.`))
  console.log(chalk.red(`你的 Node 版本是 ${chalk.yellow(`${major}.${minor}`)}，请升级到${chalk.cyan(' 6.5 或以上')}.`))
  console.log()
  if (platform === 'darwin') {
    console.log(`推荐用 ${chalk.cyan('https://github.com/creationix/nvm')} 管理和升级你的 node 版本。`)
  } else if (platform === 'win32') {
    console.log(`推荐到 ${chalk.cyan('https://nodejs.org/')} 下载最新的 node 版本。`)
  }
  process.exit(1)
}

var result

switch (script) {
case '-v':
case '--version':
  console.log(require('../package.json').version)
  break
case 'build':
case 'build-dll':
case 'server':
case 'test':
  result = spawn.sync(
    'node',
    [require.resolve(`../lib/cli/${script}`)].concat(args),
    { stdio: 'inherit' }
  )
  process.exit(result.status)
  break
default:
  console.log(`Unknown script ${chalk.cyan(script)}.`)
  break
}
